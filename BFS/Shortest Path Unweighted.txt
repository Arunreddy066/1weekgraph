public int[] shortestPathUnweighted(int V, List<List<Integer>> adj, int src) {
    int[] dist = new int[V];
    Arrays.fill(dist, -1);
    Queue<Integer> q = new LinkedList<>();
    
    dist[src] = 0;
    q.offer(src);

    while (!q.isEmpty()) {
        int node = q.poll();
        for (int neighbor : adj.get(node)) {
            if (dist[neighbor] == -1) {
                dist[neighbor] = dist[node] + 1;
                q.offer(neighbor);
            }
        }
    }
    return dist; // dist[i] = shortest distance from src to i
}
