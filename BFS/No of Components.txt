public int countComponentsBFS(int V, List<List<Integer>> adj) {
    boolean[] visited = new boolean[V];
    int count = 0;

    for (int i = 0; i < V; i++) {
        if (!visited[i]) {
            count++;
            Queue<Integer> q = new LinkedList<>();
            q.offer(i);
            visited[i] = true;

            while (!q.isEmpty()) {
                int node = q.poll();
                for (int neighbor : adj.get(node)) {
                    if (!visited[neighbor]) {
                        visited[neighbor] = true;
                        q.offer(neighbor);
                    }
                }
            }
        }
    }
    return count;
}
